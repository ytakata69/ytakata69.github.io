%TGIF 4.1.42-QPL
state(0,37,100.000,0,64,0,8,1,9,1,2,0,0,1,0,1,0,'Times-Roman',0,97920,0,0,0,10,0,0,1,1,0,16,0,0,1,1,1,1,1088,1408,1,0,2880,0).
%
% @(#)$Header$
% %W%
%
unit("1 pixel/pixel").
color_info(11,65535,0,[
	"magenta", 65535, 0, 65535, 65535, 0, 65535, 1,
	"red", 65535, 0, 0, 65535, 0, 0, 1,
	"green", 0, 65535, 0, 0, 65535, 0, 1,
	"blue", 0, 0, 65535, 0, 0, 65535, 1,
	"yellow", 65535, 65535, 0, 65535, 65535, 0, 1,
	"pink", 65535, 49344, 52171, 65535, 49344, 52171, 1,
	"cyan", 0, 65535, 65535, 0, 65535, 65535, 1,
	"CadetBlue", 24415, 40606, 41120, 24415, 40606, 41120, 1,
	"white", 65535, 65535, 65535, 65535, 65535, 65535, 1,
	"black", 0, 0, 0, 0, 0, 0, 1,
	"DarkSlateGray", 12079, 20303, 20303, 12079, 20303, 20303, 1
]).
script_frac("0.6").
fg_bg_colors('black','white').
dont_reencode("FFDingbests:ZapfDingbats").
page(1,"",1,'').
text('black',76,70,4,0,1,98,68,3,14,3,0,0,0,0,2,98,68,0,0,"",0,0,0,0,84,'',[
minilines(98,68,0,0,0,0,0,[
mini_line(69,14,3,0,0,0,[
str_block(0,69,14,3,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,80640,69,14,3,0,-1,0,0,0,0,0,
	"if, for, while,")])
]),
mini_line(98,14,3,0,0,0,[
str_block(0,98,14,3,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,80640,98,14,3,0,-1,0,0,0,0,0,
	"variables, arrays,")])
]),
mini_line(78,14,3,0,0,0,[
str_block(0,72,11,3,0,0,0,0,0,[
str_seg('black','Courier',0,80640,72,11,3,0,0,0,0,0,0,0,
	"+ - * / %")]),
str_block(0,6,14,3,0,-2,0,0,0,[
str_seg('black','Times-Roman',0,80640,6,14,3,0,-2,0,0,0,0,0,
	", ")])
]),
mini_line(67,14,3,0,0,0,[
str_block(0,67,14,3,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,80640,67,14,3,0,-1,0,0,0,0,0,
	"functions, ...")])
])
])]).
box('black','',64,64,192,148,0,1,1,4,0,0,0,0,0,'1',0,[
]).
text('black',128,157,1,1,1,91,19,30,15,4,0,0,0,0,2,91,19,0,0,"",0,0,0,0,172,'',[
minilines(91,19,0,0,1,0,0,[
mini_line(91,15,4,0,0,0,[
str_block(0,91,15,4,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,97920,91,15,4,0,-1,0,0,0,0,0,
	"C source code")])
])
])]).
oval('black','',216,80,312,128,0,1,1,51,0,0,0,0,0,'1',0,[
]).
text('black',264,96,1,1,1,60,17,52,14,3,0,0,0,0,2,60,17,0,0,"",0,0,0,0,110,'',[
minilines(60,17,0,0,1,0,0,[
mini_line(60,14,3,0,0,0,[
str_block(0,60,14,3,0,0,0,0,0,[
str_seg('black','Helvetica-Bold',1,80640,60,14,3,0,0,0,0,0,0,0,
	"compiler")])
])
])]).
poly('black','',2,[
	192,104,216,104],1,1,1,137,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
poly('black','',2,[
	312,104,336,104],1,1,1,138,0,0,0,0,0,0,0,'1',0,0,
    "0","",[
    0,8,3,0,'8','3','0'],[0,8,3,0,'8','3','0'],[
]).
box('black','',48,48,480,180,0,1,2,219,0,0,0,0,0,'1',0,[
]).
text('black',396,97,1,0,1,7,19,266,15,4,0,0,0,0,2,7,19,0,0,"",0,0,0,0,112,'',[
minilines(7,19,0,0,0,0,0,[
mini_line(7,15,4,0,0,0,[
str_block(0,7,15,4,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,97920,7,15,4,0,-1,0,0,0,0,0,
	"?")])
])
])]).
box('black','',336,64,464,148,0,1,1,267,0,0,0,0,0,'1',0,[
]).
text('black',404,157,1,1,1,99,19,268,15,4,0,0,0,0,2,99,19,0,0,"",0,0,0,0,172,'',[
minilines(99,19,0,0,1,0,0,[
mini_line(99,15,4,0,0,0,[
str_block(0,99,15,4,0,-1,0,0,0,[
str_seg('black','Times-Roman',0,97920,99,15,4,0,-1,0,0,0,0,0,
	"Assembly code")])
])
])]).
